// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import ResponsiveNavbar from "./components/Home/Navbar/ResponsiveNavbar";
// import Footer from "./components/Home/Footer/Footer";
// import Scrollbar from "./components/Scrollbar";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Create Real estate project",
//   description: "Generated by create real estate project",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {/* <navbar/> */}
//         <ResponsiveNavbar/>
//         {children}
//         {/* <footer/> */}
//         <Footer/>
//         <Scrollbar/>
//       </body>
//     </html>
//   );
// }


// src/app/layout.tsx

"use client";  // Mark this file as a client component because we are using hooks

import { usePathname } from "next/navigation";  // Import the usePathname hook from next/navigation
import localFont from "next/font/local";
import ResponsiveNavbar from "./components/Home/Navbar/ResponsiveNavbar";  // Import Navbar
import Footer from "./components/Home/Footer/Footer";  // Import Footer
import Scrollbar from "./components/Scrollbar";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = usePathname();  // Get the current pathname

  // Hide header and footer on specific pages
  const hideHeaderFooter = pathname === "/login" || pathname === "/contact";

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* Conditionally render header (Navbar) */}
        {!hideHeaderFooter && <ResponsiveNavbar />}

        {/* Render the main page content */}
        {children}

        {/* Conditionally render footer */}
        {!hideHeaderFooter && <Footer />}

        <Scrollbar />
      </body>
    </html>
  );
}



